{"is_source_file": true, "format": "JavaScript", "description": "This file defines a database service that provides a layer of abstraction for database operations, with the capability to fallback to mock data when the database is unavailable.", "external_files": ["../utils/mockData"], "external_methods": [], "published": ["setDbAvailability", "getDbAvailability", "findAll", "findById", "create", "updateById", "deleteById"], "classes": [], "methods": [{"name": "setDbAvailability", "description": "Sets the database availability status and logs the current status."}, {"name": "getDbAvailability", "description": "Returns the current database availability status."}, {"name": "getMockData", "description": "Retrieves mock data for a specific model based on the model name."}, {"name": "findMockById", "description": "Finds a mock item by its ID in the provided array of items."}, {"name": "findAll", "description": "Finds all documents for a given model, using actual data if the database is available, or mock data otherwise."}, {"name": "findById", "description": "Finds a document by its ID, using actual data if the database is available, or mock data otherwise."}, {"name": "create", "description": "Creates a new document, using actual data if the database is available, or returning a mock object otherwise."}, {"name": "updateById", "description": "Updates a document by its ID, using actual data if the database is available, or returning a mock object otherwise."}, {"name": "deleteById", "description": "Deletes a document by its ID, using actual data if the database is available, or returning a mock success indicator otherwise."}], "calls": [], "search-terms": ["database operations", "mock data service", "Mongoose model operations"], "state": 2, "file_id": 34, "knowledge_revision": 72, "git_revision": "", "ctags": [{"_type": "tag", "name": "create", "path": "/home/kavia/workspace/Claro-OTT-Apis/src/services/dbService.js", "pattern": "/^const create = async (model, data) => {$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "deleteById", "path": "/home/kavia/workspace/Claro-OTT-Apis/src/services/dbService.js", "pattern": "/^const deleteById = async (model, id) => {$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "findAll", "path": "/home/kavia/workspace/Claro-OTT-Apis/src/services/dbService.js", "pattern": "/^const findAll = async (model, query = {}, options = {}) => {$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "findById", "path": "/home/kavia/workspace/Claro-OTT-Apis/src/services/dbService.js", "pattern": "/^const findById = async (model, id) => {$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "findMockById", "path": "/home/kavia/workspace/Claro-OTT-Apis/src/services/dbService.js", "pattern": "/^const findMockById = (items, id) => {$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "getDbAvailability", "path": "/home/kavia/workspace/Claro-OTT-Apis/src/services/dbService.js", "pattern": "/^const getDbAvailability = () => {$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "getMockData", "path": "/home/kavia/workspace/Claro-OTT-Apis/src/services/dbService.js", "pattern": "/^const getMockData = (modelName) => {$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "isDbAvailable", "path": "/home/kavia/workspace/Claro-OTT-Apis/src/services/dbService.js", "pattern": "/^let isDbAvailable = false;$/", "language": "JavaScript", "kind": "variable"}, {"_type": "tag", "name": "items", "path": "/home/kavia/workspace/Claro-OTT-Apis/src/services/dbService.js", "pattern": "/^      const items = getMockData(modelName);$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "items", "path": "/home/kavia/workspace/Claro-OTT-Apis/src/services/dbService.js", "pattern": "/^    const items = getMockData(modelName);$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "mockData", "path": "/home/kavia/workspace/Claro-OTT-Apis/src/services/dbService.js", "pattern": "/^const mockData = require('..\\/utils\\/mockData');$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "modelName", "path": "/home/kavia/workspace/Claro-OTT-Apis/src/services/dbService.js", "pattern": "/^      const modelName = model.modelName.toLowerCase();$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "modelName", "path": "/home/kavia/workspace/Claro-OTT-Apis/src/services/dbService.js", "pattern": "/^    const modelName = model.modelName.toLowerCase();$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "setDbAvailability", "path": "/home/kavia/workspace/Claro-OTT-Apis/src/services/dbService.js", "pattern": "/^  setDbAvailability,$/", "language": "JavaScript", "kind": "field", "scope": "module.exports", "scopeKind": "class"}, {"_type": "tag", "name": "setDbAvailability", "path": "/home/kavia/workspace/Claro-OTT-Apis/src/services/dbService.js", "pattern": "/^const setDbAvailability = (status) => {$/", "language": "JavaScript", "kind": "constant"}, {"_type": "tag", "name": "updateById", "path": "/home/kavia/workspace/Claro-OTT-Apis/src/services/dbService.js", "pattern": "/^const updateById = async (model, id, data) => {$/", "language": "JavaScript", "kind": "constant"}], "filename": "/home/kavia/workspace/Claro-OTT-Apis/src/services/dbService.js", "hash": "f55d1bb146686cf591fc39075f50827c", "format-version": 4, "code-base-name": "default", "fields": [{"name": "let isDbAvailable = false;", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "setDbAvailability,", "scope": "module.exports", "scopeKind": "class", "description": "unavailable"}], "revision_history": [{"72": ""}]}